---
title: "Regresjonsmodeller"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
#| include: false

library(tidyverse)
library(gt)
library(readxl)
library(exscidata)
library(broom)
library(ggplot2)

library(ggtext)

data("cyclingstudy")

```

# Arbeidskrav 2

Her har vi først laget en figur som viser treningsintensiteten på 2 og 4 mmol/L hos forsøksperson 10 og 3. Videre har vi en figur som estimerer laktat terskel etter Machado. Til slutt tall på en laktat terskel etter en anslått fast verdi.

## Oppgave 1

### Undersøke treningsintensiteten på 2mmol L-1 og 4mmol L-1 hos forsøksperson 10 og 3

#### Forsøksperson 10

```{r}
#| echo: false
#| warning: false


cyclingstudy %>%
  # Select columns needed for analysis
  select(subject, group, timepoint, lac.225:lac.375) %>%
  # Only one participant and time-point
  filter(timepoint == "pre", subject == 10 ) %>%
    # Pivot to long format data using the lactate columns
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.225:lac.375) %>%  
  # Filter NA's from the data 
  filter(!is.na(lactate)) %>%
  # Plot the data, group = subject needed to connect the points
  ggplot(aes(watt, lactate, group = subject))  + 
  geom_line(lty = 2) +
  geom_point(shape = 21, fill = "lightblue", size = 2.5) +
  
  # Adding straight lines at specific values for 2 og 4 mmol L-1
  geom_hline(yintercept = 2, color = "red") +
  
  geom_hline(yintercept = 4, color = "yellow")


fp10 <- lm(lac.250 ~ subject==10 , cyclingstudy)

fp10$coefficients[1]


```

#### Forsøksperson 3

```{r}
#| echo: false
#| warning: false

cyclingstudy %>%
  # Select columns needed for analysis
  select(subject, group, timepoint, lac.125:lac.375) %>%
  # Only one participant and time-point
  filter(timepoint == "pre", subject == 3 ) %>%
    # Pivot to long format data using the lactate columns
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.125:lac.375) %>%  
  # Filter NA's from the data 
  filter(!is.na(lactate)) %>%
  
  
  
  
  
  # Plot the data, group = subject needed to connect the points
  ggplot(aes(watt, lactate, group = subject))  + 
  geom_line(lty = 2) +
  geom_point(shape = 21, fill = "lightblue", size = 2.5) +
  
  # Adding straight lines at specific values for 2 og 4 mmol L-1
  geom_hline(yintercept = 2, color = "red") +
  
  geom_hline(yintercept = 4, color = "yellow")


fp3 <- lm(lac.250 ~ subject==3 , cyclingstudy)

fp3$coefficients[1]


```

### Laktatterskel på forsøksperson 10 etter Machodo "lactate threshold estimated by the maximal deviation method (LTDmax)".

#### Forsøksperson 10

```{r}
#| echo: false
#| warning: false

dat <- cyclingstudy %>%
  # Select columns needed for analysis
  select(subject, group, timepoint, lac.225:lac.375) %>%
  # Only one participant and time-point
  filter(timepoint == "pre", subject == 10) %>%
  # Pivot to long format data using the lactate columns
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.225:lac.375) %>%
    # Filter NA's from the data 
  filter(!is.na(lactate)) %>%
  data.frame()

# Fit a third degree polynomial model (with raw orthogonal)
polymodel <- lm(lactate ~ poly(watt, 3, raw = TRUE), data = dat)

delta_mod <- lm(lactate ~ watt, data = filter(dat, watt %in% c(min(watt),  max(watt)) ))


# Calculate the point with the largest perpendicular distance between a straight line 
# and the 3rd degree polynomial. 
d1 <- coef(polymodel)[2]
d2 <- coef(polymodel)[3]
d3 <- coef(polymodel)[4]
delta <- coef(delta_mod)[2]

# Equation from Machodo
poly_threshold <- (-d2 + sqrt((d2^2 - 3 * d3 * (d1 - delta)) )) / (3 * d3)


# Plotting the results
dat %>%
  ggplot(aes(watt, lactate))  + 
  
  geom_smooth(method = "lm", formula = y ~ poly(x, 3), 
              se = FALSE, 
              color = "steelblue") + 
  
  geom_segment(aes(y = pull(filter(dat, watt == min(watt)), lactate), 
               yend = pull(filter(dat, watt == max(watt)), lactate), 
               x = min(watt), 
               xend = max(watt)), 
               color = "steelblue", 
               linewidth = 1) +
  
  
  geom_segment(aes(y = predict(polymodel, newdata = data.frame(watt = poly_threshold)), 
                   yend = 0, 
                   x = poly_threshold, 
                   xend = poly_threshold), 
               color = "red", lty = 2, 
               arrow = arrow(type = "closed", length = unit(4, "mm"))) +

  
  
  geom_point()
```

### Laktatterskel på forsøksperson 3 etter Machado "lactate threshold estimated by the maximal deviation method (LTDmax)"

#### Forsøksperson 3

```{r}
#| echo: false
#| warning: false

dat <- cyclingstudy %>%
  # Select columns needed for analysis
  select(subject, group, timepoint, lac.225:lac.375) %>%
  # Only one participant and time-point
  filter(timepoint == "pre", subject == 3) %>%
  # Pivot to long format data using the lactate columns
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.225:lac.375) %>%
    # Filter NA's from the data 
  filter(!is.na(lactate)) %>%
  data.frame()

# Fit a third degree polynomial model (with raw orthogonal)
polymodel <- lm(lactate ~ poly(watt, 3, raw = TRUE), data = dat)

delta_mod <- lm(lactate ~ watt, data = filter(dat, watt %in% c(min(watt),  max(watt)) ))


# Calculate the point with the largest perpendicular distance between a straight line 
# and the 3rd degree polynomial. 
d1 <- coef(polymodel)[2]
d2 <- coef(polymodel)[3]
d3 <- coef(polymodel)[4]
delta <- coef(delta_mod)[2]

# Equation from Machado
poly_threshold <- (-d2 + sqrt((d2^2 - 3 * d3 * (d1 - delta)) )) / (3 * d3)


# Plotting the results
dat %>%
  ggplot(aes(watt, lactate))  + 
  
  geom_smooth(method = "lm", formula = y ~ poly(x, 3), 
              se = FALSE, 
              color = "steelblue") + 
  
  geom_segment(aes(y = pull(filter(dat, watt == min(watt)), lactate), 
               yend = pull(filter(dat, watt == max(watt)), lactate), 
               x = min(watt), 
               xend = max(watt)), 
               color = "steelblue", 
               linewidth = 1) +
  
  
  geom_segment(aes(y = predict(polymodel, newdata = data.frame(watt = poly_threshold)), 
                   yend = 0, 
                   x = poly_threshold, 
                   xend = poly_threshold), 
               color = "red", lty = 2, 
               arrow = arrow(type = "closed", length = unit(4, "mm"))) +

  
  
  geom_point()
```

### "Predicted - fixed lactate value"

#### Forsøksperson 10

```{r}
#| echo: false
#| warning: false

# Save a data set of lactate values from participant 10, time-point pre
dat <- cyclingstudy %>%
  select(subject, group, timepoint, lac.125:lac.375) %>%
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.", 
              names_transform = list(watt = as.numeric), 
              cols = lac.125:lac.375) %>%
  filter(subject == 10, 
         timepoint == "pre", 
         !is.na(lactate)) %>% # Remove NA values
  print()

# Fit the model 
model <- lm(lactate ~ watt + I(watt^2) + I(watt^3), data = dat)


# Predict lactate values over all observed watt values
# calculate the smallest distance from the fixed lactate value 

new_data <- data.frame(watt = seq(from = min(dat$watt), to = max(dat$watt), by = 0.1))

new_data$dist <- abs(predict(model, newdata = new_data) - 4)

# Find the smallest value of predicted - fixed lactate value
new_data %>%
  filter(dist == min(dist)) # Where the dist value equals the minimum dist value
```

### "Predicted - fixed lactate value"

#### Forsøksperson 3

```{r}
#| echo: false
#| warning: false

# Save a data set of lactate values from participant 10, time-point pre
dat <- cyclingstudy %>%
  select(subject, group, timepoint, lac.125:lac.375) %>%
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.", 
              names_transform = list(watt = as.numeric), 
              cols = lac.125:lac.375) %>%
  filter(subject == 3, 
         timepoint == "pre", 
         !is.na(lactate)) %>% # Remove NA values
  print()

# Fit the model 
model <- lm(lactate ~ watt + I(watt^2) + I(watt^3), data = dat)


# Predict lactate values over all observed watt values
# calculate the smallest distance from the fixed lactate value 

new_data <- data.frame(watt = seq(from = min(dat$watt), to = max(dat$watt), by = 0.1))

new_data$dist <- abs(predict(model, newdata = new_data) - 4)

# Find the smallest value of predicted - fixed lactate value
new_data %>%
  filter(dist == min(dist)) # Where the dist value equals the minimum dist value
```

### Endring i laktat 125 watt og 250 watt

```{r}
#| echo: false
#| warning: false

cyclingstudy %>% 
        select(subject, group, timepoint, lac.125) %>%
        pivot_wider(names_from = timepoint, 
                    values_from = lac.125) %>%
        mutate(change = meso3 - pre) %>%
        ggplot(aes(group, change)) + geom_boxplot()+
        labs(y = "Laktat (mmol/L) endring fra pre til meso3", 
             x = "Gruppe", 
             title = "Endring i laktat 125 watt") + 
        
        theme(axis.title.y = element_markdown())
```

```{r}
#| echo: false
#| warning: false
cyclingstudy %>% 
        select(subject, group, timepoint, lac.250) %>%
        pivot_wider(names_from = timepoint, 
                    values_from = lac.250) %>%
        mutate(change = meso3 - pre) %>%
        ggplot(aes(group, change)) + geom_boxplot()+
        labs(y = "Laktat (mmol/L) endring fra pre til meso3", 
             x = "Gruppe", 
             title = "Endring i laktat 250 watt") + 
        
        theme(axis.title.y = element_markdown())
```

## Oppgave 2

Lage en "calibration curve" som viser effektiviteten av qPCR reaksjonen på "pool sample 1" og "pool sample 2"

```{r}
#| echo: false
#| warning: false



poolsample1 = read_excel("poolsample1.xlsx")%>%
  
  

  select(1, `Avg CT`, `Log (sample quan)`) %>%
  rename("Fortynningsserie" = 1,
                "Snitt CT" = `Avg CT`, 
                  "Log" = `Log (sample quan)`)
  
  
  
   
    

Pool_sample_2 = read_excel("Pool sample 2.xlsx") %>%
  select(1, `Avg CT`, `Log (sample quan)`) %>%
  rename("Fortynningsserie" = 1,
                "Snitt CT" = `Avg CT`, 
                  "Log" = `Log (sample quan)`)
  


```

```{r}
#| echo: false
#| warning: false

# Data fra pool sample 1 (replace with your actual data)
observed_values_1 <- c(27.5, 30.1, 34.5)
true_values_1 <- c(0, -1, -2)

# Create a scatter plot
plot(observed_values_1,true_values_1, main="Effektivitet av pcr reaksjon 1", xlab= "Snitt CT", ylab="Fortynningsserie")

# Add a line of best fit
abline(lm(true_values_1 ~ observed_values_1  ), col="red")

# Optionally, add more formatting or annotations to the plot

gt(poolsample1)

```

```{r}
#| echo: false
#| warning: false

observed_values_2 <- c(28.7, 30.6, 29.4)
true_values_2 <- c(0, -1, -2)


# Create a scatter plot
plot(observed_values_2, true_values_2, main="Effektivitet av pcr reaksjon 2", xlab= "Snitt CT", ylab="Fortynningsserie")

# Add a line of best fit
abline(lm( true_values_2 ~ observed_values_2), col="red")



gt(Pool_sample_2) 

```

## Oppgave 3

Vi skal undersøke om det er en sammenheng mellom økt mager kroppsmasse (LBM) og 3 repetisjoner maks i knebøy (3RM squat).

```{r}
#| echo: false
#| warning: false

linearfig <- exscidata::hypertrophy %>%
  select(PARTICIPANT,
         DXA_LBM_T1,
         SQUAT_3RM) %>% 
  ggplot(aes(DXA_LBM_T1, SQUAT_3RM)) + 
  geom_point(size = 3, 
             fill = "lightblue", 
             shape = 21) +
         labs(x = "Lean body mass(kg)", 
              y = "3RM squat (kg)") +
         theme_minimal() +
  geom_smooth(method = "lm")
linearfig

#Making a regression model with LBM and 3rm squat

modell <- hypertrophy %>% 
  select(PARTICIPANT,
         DXA_LBM_T1,
         SQUAT_3RM)
m3 <- lm(formula = SQUAT_3RM ~ DXA_LBM_T1, data = modell)


tidy(m3) %>% 
  gt() %>% 
  fmt_auto()

# for 1 kg C8kning i LBM, C8ker squatten med 1,5kg ish
```

I tabellen over ser vi sammenhengen mellom lean body mass og 3RM i knebøy.

**Estimate**: Dette viser stigningstallet. Vi ser at for hver kilogram LBM øker, vil 3RM i knebøy øke med 1,458kg.

**Std.error**: Standardfeil er et mål for hvor nøyaktig gjennomsnittet av en statistisk distribusjon representerer den sanne verdien. Jo lavere tallet er, jo mer pålitelig er gjennomsnittsestimatet. Tallet på 0,302 viser til en relativt lav spredning i gjennomsnittet.

**Statistics**: T-verdien er: $\frac{stigningstallet}{standardfeil}$. T-verdien brukes til å vurdere signifikansen til hver koeffisient i regresjonsmodellen. Jo høyere t-verdien er, jo større sjanse er det for at det er en signifikant sammenheng mellom LBM og 3RM knebøy. en T-verdi på 4,8 viser til en svært liten sjansje for at sammenhengen er tilfeldig.

**P-verdi**: Viser til hvor stor grad vi kan anta at det er en signifikant sammenheng mellom den uavhengige og avhengige variablen. Hvis p-verdien er under 0,05 regnes det ofte som en signifikant sammenheng. Lavere P-verdi viser til lavere sjanse for at sammenhengen vi ser er tilfeldig. vær P-verdi på: 4.421 \* 10^-5^ viser til en svært stor sammenheng mellom økning i LBM og 3RM knebøy.
